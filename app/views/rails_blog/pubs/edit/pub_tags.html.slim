.hidden style='display:none'
  = form_for PubTag.new, url: create_published_pub_tags_url, remote: true, data: { type: :json }, html: { class: 'js--pub-tag-create-and-pub--form' } do |f|
    = hidden_field_tag :title, autocomplete: :off

.hidden style='display:none'
  = form_tag pub_category_rels_url, remote: true, class: 'js--pub-tag-rels--form', data: { type: :json } do
    = hidden_field_tag :category_type, :PubTag
    = hidden_field_tag :category_id, '?'

    = hidden_field_tag :pub_type, @pub.class
    = hidden_field_tag :pub_id,   @pub.id

    = hidden_field_tag :checked

ruby:
  tags = pub.pub_tags

  pub_tags = PubTag.published.min2max(:title)
  pub_tags = pub_tags.group_by{|u| u.title.first.mb_chars.upcase.ord }

  rus, eng = pub_tags.partition{|item| item.first > 1000 }
  rus_tags = rus.sort
  eng_tags = eng.sort

  sorted_tags = rus_tags + eng_tags
  sorted_tags = sorted_tags.map(&:last).flatten

  selected_tags = tags.map{|pub_tag| pub_tag.slug }

  tag_options = options_for_select(sorted_tags.map do |pub_tag|
    html_params = {
      class: "js--pub-tag-select2-option--#{ pub_tag.id }",
      data: { id: pub_tag.id }
    }

    [pub_tag.title, pub_tag.slug, html_params]
  end, selected_tags)

.ma.w1000.mb40
  = select_tag :pub_tags_selector, tag_options, multiple: :multiple, autocomplete: :off, class: 'js--pub-tag-select2 pub-tag-select2 w80p', placeholder: 'Выбор тегов'

.ma.w1000
  - if rus_tags.size > 0
    .mt40.mb40.fs26 Русский алфавит

    - rus_tags.each do |alpha, glossary_array|
      .fs18.mb15= alpha.chr
      .mb20
        - glossary_array.sort{|a,b| a.title.mb_chars.downcase <=> b.title.mb_chars.downcase}.each do |tag|
          ruby:
            basic_css  = "js--pub-tag--#{ tag.slug } js--pub-tag--btn pub-tag--btn ptz--btn ptz--size-13 mr5 mb5"
            basic_data = { class: tag.class.to_s, id: tag.id }

          - if tags.include?(tag)
            = link_to tag.title, jsvoid, class: "#{ basic_css } selected", data: basic_data
          - else
            = link_to tag.title, jsvoid, class: "#{ basic_css } regular", data: basic_data

  - if eng_tags.size > 0
    .mt40.mb40.fs26 Английский алфавит

    - eng_tags.each do |alpha, glossary_array|
      .fs18.mb15= alpha.chr
      .mb20
        - glossary_array.sort{|a,b| a.title.mb_chars.downcase <=> b.title.mb_chars.downcase}.each do |tag|
          ruby:
            basic_css  = "js--pub-tag--#{ tag.slug } js--pub-tag--btn pub-tag--btn ptz--btn ptz--size-13 mr5 mb5"
            basic_data = { class: tag.class.to_s, id: tag.id }

          - if tags.include?(tag)
            = link_to tag.title, jsvoid, class: "#{ basic_css } selected", data: basic_data
          - else
            = link_to tag.title, jsvoid, class: "#{ basic_css } regular", data: basic_data
