- tags     = pub.pub_tags
- pub_tags = PubTag.published

.ma.w1000.mb40(class='js--pub-tags--selected')
  - tags.each do |tag|
    = link_to jsvoid, remote: true, data: { 'category-type' => tag.class.to_s, 'category-id' => tag.id }, class: "js--pub-tags--selected--#{ tag.slug } js--pub-tags-rels--delete ptz--btn ptz--size-13 mr5 mb5 b"
      = tag.title

.ma.w1000
  - pub_tags = pub_tags.min2max(:title).group_by{|u| u.title.first.mb_chars.upcase.ord }
  - pub_tags.sort.each do |alpha, glossary_array|
    .fs18.mb15= alpha.chr
    .mb20
      - glossary_array.sort{|a,b| a.title.mb_chars.downcase <=> b.title.mb_chars.downcase}.each do |tag|
        - if tags.include?(tag)
          = link_to tag.title, jsvoid, class: "js--pub-tags--current--#{ tag.slug } js--pub-tags-rels--delete ptz--btn ptz--size-13 mr5 mb5 b", data: { 'category-type' => tag.class.to_s, 'category-id' => tag.id }
        - else
          = link_to tag.title, jsvoid, class: "js--pub-tags--regular--#{ tag.slug } js--pub-tags-rels--create ptz--btn ptz--size-13 mr5 mb5", remote: true, data: { 'category-type' => tag.class.to_s, 'category-id' => tag.id }
